:github_url: https://github.com/nyx-org/gaia


.. _program_listing_file_lib_dot.hpp:

Program Listing for File dot.hpp
================================

|exhale_lsh| :ref:`Return to documentation for file <file_lib_dot.hpp>` (``lib/dot.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /* SPDX-License-Identifier: BSD-2-Clause */
   #pragma once
   
   #include <frg/formatting.hpp>
   #include <frg/logging.hpp>
   #include <frg/string.hpp>
   
   namespace Gaia {
   
   template <typename Allocator> class DotGraph {
   public:
     explicit DotGraph(bool directed) : directed(directed) {
       str += directed ? "digraph {" : "graph {";
     }
   
     void add_child_to_node(frg::string_view parent, frg::string_view child,
                            frg::string_view child_label) {
   
       add_node(child, child_label);
       frg::output_to(str) << frg::fmt("{}{}{};", parent, directed ? "->" : "--",
                                       child);
     }
   
     void add_node(frg::string_view name, frg::string_view label) {
       frg::output_to(str) << frg::fmt("{}[label=\"{}\"];", name, label);
     }
   
     frg::string<Allocator> generate() {
       str.push_back('}');
       return str;
     }
   
     frg::string<Allocator> get_str() { return str; }
   
   private:
     bool directed = false;
     frg::string<Allocator> str = "";
   };
   
   } // namespace Gaia
